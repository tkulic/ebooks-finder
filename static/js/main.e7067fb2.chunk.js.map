{"version":3,"sources":["components/Header.js","components/SearchBar.js","components/BookCard.js","components/BooksGrid.js","img/loading-spinner.gif","img/book-placeholder.svg","components/Footer.js","App.js","utils/formatAPIData.js","index.js"],"names":["Header","href","SearchBar","props","useState","textInput","resultsCount","publicationType","sortOrder","query","setQuery","filtersVisible","setFiltersVisible","inputRef","useRef","handleChange","e","target","name","value","useEffect","current","focus","console","log","className","onSubmit","preventDefault","fetchData","type","id","placeholder","aria-label","title","onChange","ref","required","onClick","checked","BookCard","bookData","googleBooksLink","rel","description","authors","publisher","publishedDate","ISBN","pageCount","src","thumbnail","alt","BooksGrid","booksData","map","book","Footer","App","searchedBooks","setSearchedBooks","message","setMessage","eBooksonly","eBooks","loadingSpinner","fetch","then","res","json","data","dbObject","volumeInfo","subtitle","industryIdentifiers","identifier","imageLinks","placeholderImg","infoLink","formatAPIData","items","catch","err","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e7067fb2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Header() {\r\n    return (\r\n        <header>\r\n            <h1><a href=\"/\">eFree. eRead.</a></h1>\r\n        </header>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\n\r\nexport default function SearchBar(props) {\r\n    const [query, setQuery] = useState({\r\n        textInput: \"\",\r\n        resultsCount: \"10\",\r\n        publicationType: \"all\",\r\n        sortOrder: \"relevance\"\r\n    })\r\n    const [filtersVisible, setFiltersVisible] = useState(false)\r\n    const inputRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n        inputRef.current.focus()\r\n    }, [])\r\n\r\n    function handleChange(e) {\r\n        const { name, value } = e.target\r\n        setQuery({\r\n            ...query,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        if (query.textInput) {\r\n            props.fetchData(query)\r\n            setFiltersVisible(false)\r\n        }\r\n    }\r\n\r\n    function toogleFilters(e) {\r\n        setFiltersVisible(true)\r\n    }\r\n\r\n    function clearInputField() {\r\n        setQuery({\r\n            textInput: \"\",\r\n            resultsCount: \"10\",\r\n            publicationType: \"all\",\r\n            sortOrder: \"relevance\"\r\n        })\r\n    }\r\n\r\n    console.log(query)\r\n\r\n    return (\r\n        <div className=\"search-form\">\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"search-bar\">\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"query\"\r\n                        name=\"textInput\"\r\n                        placeholder=\"type here\"\r\n                        aria-label=\"Search by title, author or subject.\"\r\n                        title=\"Search by title, author or subject.\"\r\n                        value={query.textInput}\r\n                        onChange={handleChange}\r\n                        ref={inputRef}\r\n                        required\r\n                    />\r\n                    <button type=\"reset\" className=\"reset-btn\" onClick={clearInputField}>⨉</button>\r\n                    <button type=\"submit\" className=\"search-btn\">Search</button>\r\n                </div>\r\n                {!filtersVisible && <button type=\"button\" className=\"toggle-filters-btn\" onClick={toogleFilters}>▹Filters</button>}\r\n                <fieldset className={`search-options ${filtersVisible ? \"visible\" : \"\"}`}>\r\n                    <div className=\"search-option\">\r\n                        <legend>Number of results: </legend>\r\n                        <label className=\"radio-label\">\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"resultsCount\"\r\n                                value=\"10\"\r\n                                checked={query.resultsCount === \"10\"}\r\n                                onChange={handleChange}\r\n                            />\r\n                                10\r\n                        </label>\r\n                        <label className=\"radio-label\">\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"resultsCount\"\r\n                                value=\"20\"\r\n                                checked={query.resultsCount === \"20\"}\r\n                                onChange={handleChange}\r\n                            />\r\n                                20\r\n                        </label>\r\n                        <label className=\"radio-label\">\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"resultsCount\"\r\n                                value=\"30\"\r\n                                checked={query.resultsCount === \"30\"}\r\n                                onChange={handleChange}\r\n                            />\r\n                                30\r\n                        </label>\r\n                        <label className=\"radio-label\">\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"resultsCount\"\r\n                                value=\"40\"\r\n                                checked={query.resultsCount === \"40\"}\r\n                                onChange={handleChange}\r\n                            />\r\n                                40\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"search-option\">\r\n                        <legend>Publication type: </legend>\r\n                        <label className=\"radio-label\">\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"publicationType\"\r\n                                value=\"all\"\r\n                                checked={query.publicationType === \"all\"}\r\n                                onChange={handleChange}\r\n                            />\r\n                                All\r\n                        </label>\r\n                        <label className=\"radio-label\">\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"publicationType\"\r\n                                value=\"books\"\r\n                                checked={query.publicationType === \"booka\"}\r\n                                onChange={handleChange}\r\n                            />\r\n                                Books\r\n                        </label>\r\n                        <label className=\"radio-label\">\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"publicationType\"\r\n                                value=\"magazines\"\r\n                                checked={query.publicationType === \"magazines\"}\r\n                                onChange={handleChange}\r\n                            />\r\n                                Magazines\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"search-option\">\r\n                        <legend>Sort by: </legend>\r\n                        <label className=\"radio-label\">\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"sortOrder\"\r\n                                value=\"relevance\"\r\n                                checked={query.sortOrder === \"relevance\"}\r\n                                onChange={handleChange}\r\n                            />\r\n                                Relevance\r\n                        </label>\r\n                        <label className=\"radio-label\">\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"sortOrder\"\r\n                                value=\"newest\"\r\n                                checked={query.sortOrder === \"newest\"}\r\n                                onChange={handleChange}\r\n                            />\r\n                                Newest\r\n                        </label>\r\n                    </div>\r\n                </fieldset>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function BookCard({ bookData }) {\r\n    // console.log(bookData.authors.join(\", \")) // Not working?!\r\n    return (\r\n        <div className=\"book-card\">\r\n            <a href={bookData.googleBooksLink}><h2 className=\"book-title\" target=\"_blank\" rel=\"noreferrer\">{bookData.title}</h2></a>\r\n            <div className=\"flex-wrapper\">\r\n                <div className=\"col-left\">\r\n                    <p><span className=\"light-text\">{bookData.description}</span></p>\r\n                    <p><span className=\"light-text\">Author:</span> {bookData.authors}</p>\r\n                    <p><span className=\"light-text\">Publisher:</span> {bookData.publisher}</p>\r\n                    <p><span className=\"light-text\">Published:</span> {bookData.publishedDate}</p>\r\n                    <p><span className=\"light-text\">ISBN:</span> {bookData.ISBN}</p>\r\n                    <p><span className=\"light-text\">Pages:</span> {bookData.pageCount}</p>\r\n                </div>\r\n                <div className=\"col-right\">\r\n                    <a href={bookData.googleBooksLink} target=\"_blank\" rel=\"noreferrer\">\r\n                        <img src={bookData.thumbnail} alt=\"book cover\" />\r\n                    </a>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport BookCard from './BookCard'\r\n\r\nexport default function BooksGrid({ booksData }) {\r\n    return (\r\n        <div className=\"books-grid\">\r\n            {booksData.map(book => (\r\n                <BookCard key={book.id} bookData={book} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/loading-spinner.10d1208f.gif\";","export default __webpack_public_path__ + \"static/media/book-placeholder.785232d9.svg\";","import React from 'react'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer>\r\n            <p>Powered by <a href=\"https://developers.google.com/books\" target=\"_blank\" rel=\"noreferrer\">Google Books API</a></p>\r\n        </footer>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nimport Header from './components/Header'\r\nimport SearchBar from './components/SearchBar'\r\nimport BooksGrid from './components/BooksGrid'\r\n\r\nimport loadingSpinner from \"./img/loading-spinner.gif\"\r\nimport { formatAPIData } from \"./utils/formatAPIData\"\r\nimport Footer from './components/Footer'\r\n\r\nexport default function App() {\r\n    const [searchedBooks, setSearchedBooks] = useState([])\r\n    const [message, setMessage] = useState(\"\")\r\n\r\n    function fetchData(query) {\r\n        console.log(query.eBooksonly)\r\n        console.log(query.textInput)\r\n        const eBooks = query.eBooksonly ? \"&filter=free-ebooks\" : \"\"\r\n        console.log(eBooks)\r\n        setMessage(<img src={loadingSpinner} alt=\"loading spinner\" className=\"loading-spinner\" />)\r\n        fetch(`https://www.googleapis.com/books/v1/volumes?q=${query.textInput}&maxResults=${query.resultsCount}&printType=${query.publicationType}&orderBy=${query.sortOrder}${eBooks}&filter=free-ebooks`)\r\n\r\n            // q=query+inauthor:value/intitle:value  &filter=free-ebooks &maxResults=40 &printType=all/books/magazines &orderBy=newest/relevance\r\n\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setSearchedBooks(formatAPIData(data.items))\r\n                setMessage(\"\")\r\n            })\r\n            .catch(err => {\r\n                console.log(err.message)\r\n                setMessage(err.message)\r\n                setSearchedBooks([])\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div className=\"wrapper\">\r\n                <SearchBar fetchData={fetchData} />\r\n                <BooksGrid booksData={searchedBooks} />\r\n                <p className=\"message\">{message}</p>\r\n                <Footer />\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}\r\n","import placeholderImg from \"../img/book-placeholder.svg\"\r\n\r\nexport function formatAPIData(data) {\r\n    if (!data) {\r\n        return []\r\n    } else {\r\n        const booksData = data.map(dbObject => {\r\n            const id = dbObject.id\r\n\r\n            const { volumeInfo } = dbObject\r\n            const title = volumeInfo.title\r\n            const description = \"subtitle\" in volumeInfo ? volumeInfo.subtitle : \"No description\"\r\n            const authors = \"authors\" in volumeInfo ? volumeInfo.authors : \"N/A\"\r\n            const publisher = \"publisher\" in volumeInfo ? volumeInfo.publisher : \"N/A\"\r\n            const publishedDate = \"publishedDate\" in volumeInfo ? volumeInfo.publishedDate : \"N/A\"\r\n            const ISBN = \"industryIdentifiers\" in volumeInfo ? volumeInfo.industryIdentifiers[0].identifier : \"N/A\"\r\n            const pageCount = \"pageCount\" in volumeInfo ? volumeInfo.pageCount : \"N/A\"\r\n            const thumbnail = \"imageLinks\" in volumeInfo ? volumeInfo.imageLinks.thumbnail : placeholderImg\r\n            const googleBooksLink = volumeInfo.infoLink\r\n\r\n            return {\r\n                id,\r\n                title,\r\n                description,\r\n                authors,\r\n                publisher,\r\n                publishedDate,\r\n                ISBN,\r\n                pageCount,\r\n                thumbnail,\r\n                googleBooksLink\r\n            }\r\n        })\r\n        return booksData\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}